name: LLM Performance Test For Linux

# Cancel previous runs in the PR when you push new commits
concurrency:
  group: ${{ github.workflow }}-llm-performance-tests-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

# Controls when the action will run.
on:
  # schedule:
  #   - cron: "30 16 * * *" # GMT time, 16:30 GMT == 00:30 China
  # please uncomment it for PR tests
  # pull_request:
  #   branches: [main]
  #   paths:
  #     - ".github/workflows/llm_performance_tests.yml"
  #     - "python/llm/test/benchmark/**"
  #     - "python/llm/dev/benchmark/all-in-one/**"
  # workflow_dispatch:
  #   inputs:
  #     arc:
  #       description: "If trigger performance test on Arc"
  #       required: false
  #       type: boolean
  #       default: true
  #     spr:
  #       description: "If trigger performance test on SPR"
  #       required: false
  #       type: boolean
  #       default: true
  #     core:
  #       description: "If trigger performance test on Core"
  #       required: false
  #       type: boolean
  #       default: true
  #     igpu:
  #       description: "If trigger performance test on iGPU"
  #       required: false
  #       type: boolean
  #       default: true
  workflow_call:
    inputs:
      checkout-ref:
        description: 'ref for checking out, including branch, tag or SHA'
        required: true
        type: string
      arc:
        description: "If trigger performance test on Arc"
        required: false
        type: boolean
        default: true
      spr:
        description: "If trigger performance test on SPR"
        required: false
        type: boolean
        default: true
      core:
        description: "If trigger performance test on Core"
        required: false
        type: boolean
        default: true
      mtl:
        description: "If trigger performance test on MTL (Windows)"
        required: false
        type: boolean
        default: true
      lnl:
        description: "If trigger performance test on LNL (Windows)"
        required: false
        type: boolean
        default: true
      dgpu:
        description: "If trigger performance test on dGPU (Windows)"
        required: false
        type: boolean
        default: true
      gpu-pytorch-version:
        description: 'PyTorch version used for GPU perf tests'
        required: false
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  llm-cpp-build:
    uses: ./.github/workflows/llm-binary-build.yml
    with:
      platform: ${{ (github.event_name == 'workflow_dispatch' && (inputs.checkout-ref != 'main')) && 'Windows,Linux' || 'Dummy' }}

  llm-performance-test-on-arc:
    if: ${{ github.event.schedule || ( github.event_name == 'workflow_dispatch' && inputs.arc ) }} # please comment it for PR tests
    needs: llm-cpp-build
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
    runs-on: [self-hosted, llm, perf]
    env:
      OMP_NUM_THREADS: 16
      THREAD_NUM: 16
      ANALYTICS_ZOO_ROOT: ${{ github.workspace }}
      CSV_SAVE_PATH: ${{ (github.event.schedule || (github.event_name == 'workflow_dispatch' && (inputs.checkout-ref == 'main'))) && '/mnt/disk1/nightly_perf_gpu/' || '/mnt/disk1/pr_perf_gpu/' }}

    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
        with:
          repository: 'intel-analytics/ipex-llm'
          ref: ${{ inputs.checkout-ref }}

      # - name: Set up Python ${{ matrix.python-version }}
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: ${{ matrix.python-version }}

      - name: Create conda env
        run: |
          conda create -n perf-test-env python=${{ matrix.python-version }} -y

      - name: Install dependencies
        shell: bash
        # pip install transformers_stream_generator for model internlm-chat-7b-8k
        # pip install tiktoken for model Qwen-7B-Chat-10-12
        # pip install matplotlib for model Qwen-VL-Chat
        run: |
          source activate perf-test-env
          python -m pip install --upgrade pip
          python -m pip install --upgrade wheel
          python -m pip install --upgrade omegaconf
          python -m pip install --upgrade pandas
          python -m pip install --upgrade einops
          python -m pip install --upgrade transformers_stream_generator
          python -m pip install --upgrade tiktoken
          python -m pip install --upgrade matplotlib
          conda deactivate

      # # specific for test on certain commits
      # - name: Download llm binary
      #   if: ${{ github.event_name == 'workflow_dispatch' && (inputs.checkout-ref != 'main') }}
      #   uses: ./.github/actions/llm/download-llm-binary

      # - name: Install IPEX-LLM from source
      #   if: ${{ github.event_name == 'workflow_dispatch' && (inputs.checkout-ref != 'main') }}
      #   uses: ./.github/actions/llm/setup-llm-env
      #   with:
      #     extra-dependency: "xpu_2.1"

      - name: Install IPEX-LLM from Pypi
        # if: ${{ github.event.schedule || (github.event_name == 'workflow_dispatch' && (inputs.checkout-ref == 'main')) }}
        shell: bash
        run: |
          source activate perf-test-env
          
          # test_version_date=`date -d 'yesterday' '+%Y%m%d'`
          # test_version=2.2.0b$test_version_date
          # pip install --pre --upgrade ipex-llm[xpu]==$test_version --extra-index-url https://pytorch-extension.intel.com/release-whl/stable/xpu/cn/
          # if ! pip show ipex-llm | grep $test_version; then
          #   echo "Did not install ipex-llm with excepted version $test_version"
          #   exit 1
          # fi
          
          pip install --pre --upgrade ipex-llm[xpu_2.6]==2.2.0b20250108 --extra-index-url https://download.pytorch.org/whl/test/xpu

          conda deactivate

      - name: Test installed xpu version
        shell: bash
        run: |
          source activate perf-test-env
          python -m pip install --upgrade pytest
          python -m pip install --upgrade expecttest
          bash python/llm/test/run-llm-install-tests.sh
          conda deactivate

      - name: Test on xpu(transformers==4.36.2)
        shell: bash
        run: |
          source activate perf-test-env
          
          date_for_test_version=$(date -d yesterday +%Y-%m-%d)
          sed -i "s/date.today()/\"$date_for_test_version\"/g" python/llm/dev/benchmark/all-in-one/run.py
          
          export USE_XETLA=OFF
          export SYCL_CACHE_PERSISTENT=1
          export SYCL_PI_LEVEL_ZERO_USE_IMMEDIATE_COMMANDLISTS=1
          
          pip install transformers==4.36.2
          
          cp python/llm/test/benchmark/arc-perf-transformers-436.yaml python/llm/dev/benchmark/all-in-one/config.yaml
          cd python/llm/dev/benchmark/all-in-one
          mkdir test_batch1
          mkdir test_batch2
          mkdir test_batch4
          
          # batch_size 1
          # hide time info
          sed -i 's/str(end - st)/"xxxxxx"/g' run.py
          # change csv name
          sed -i 's/{today}/{today}_test1_batch1/g' run.py
          python run.py
          mv *.csv test_batch1
          
          # batch_size 2
          cd ../../../../../ 
          cp python/llm/test/benchmark/arc-perf-transformers-436-batch2.yaml python/llm/dev/benchmark/all-in-one/config.yaml
          cd python/llm/dev/benchmark/all-in-one
          # change csv name
          sed -i 's/batch1/batch2/g' run.py
          python run.py
          mv *.csv test_batch2
          
          # batch_size 4
          cd ../../../../../ 
          cp python/llm/test/benchmark/arc-perf-transformers-436-batch4.yaml python/llm/dev/benchmark/all-in-one/config.yaml
          cd python/llm/dev/benchmark/all-in-one
          # change csv name
          sed -i 's/batch2/batch4/g' run.py
          python run.py
          mv *.csv test_batch4

          conda deactivate

      - name: Test on xpu(transformers==4.37.0)
        shell: bash
        run: |
          source activate perf-test-env
          
          export USE_XETLA=OFF
          export SYCL_CACHE_PERSISTENT=1
          export SYCL_PI_LEVEL_ZERO_USE_IMMEDIATE_COMMANDLISTS=1
          
          # upgrade for default transformers version
          python -m pip install transformers==4.37.0
          
          # batch_size 1
          cp python/llm/test/benchmark/arc-perf-transformers-437.yaml python/llm/dev/benchmark/all-in-one/config.yaml
          cd python/llm/dev/benchmark/all-in-one
          # change csv name
          sed -i 's/test1_batch4/test2_batch1/g' run.py
          python run.py
          mv *.csv test_batch1
          
          # batch_size 2
          cd ../../../../../ 
          cp python/llm/test/benchmark/arc-perf-transformers-437-batch2.yaml python/llm/dev/benchmark/all-in-one/config.yaml
          cd python/llm/dev/benchmark/all-in-one
          # change csv name 
          sed -i 's/batch1/batch2/g' run.py
          python run.py
          mv *.csv test_batch2
          
          # batch_size 4
          cd ../../../../../ 
          cp python/llm/test/benchmark/arc-perf-transformers-437-batch4.yaml python/llm/dev/benchmark/all-in-one/config.yaml
          cd python/llm/dev/benchmark/all-in-one
          # change csv name 
          sed -i 's/batch2/batch4/g' run.py
          python run.py
          mv *.csv test_batch4

          conda deactivate
      
      - name: Test on xpu(transformers==4.40.0)
        shell: bash
        run: |
          source activate perf-test-env
          
          export USE_XETLA=OFF
          export SYCL_CACHE_PERSISTENT=1
          export SYCL_PI_LEVEL_ZERO_USE_IMMEDIATE_COMMANDLISTS=1
          
          # upgrade transformers for model Qwen/Qwen1.5-MoE-A2.7B-Chat
          python -m pip install transformers==4.40.0
          python -m pip install "trl<0.12.0"
          
          # batch_size 1
          cp python/llm/test/benchmark/arc-perf-transformers-440.yaml python/llm/dev/benchmark/all-in-one/config.yaml
          cd python/llm/dev/benchmark/all-in-one
          # change csv name
          sed -i 's/test2_batch4/test3_batch1/g' run.py
          python run.py
          mv *.csv test_batch1

          conda deactivate

      - name: Test on xpu(transformers==4.43.1)
        shell: bash
        run: |
          source activate perf-test-env
          
          export USE_XETLA=OFF
          export SYCL_CACHE_PERSISTENT=1
          export SYCL_PI_LEVEL_ZERO_USE_IMMEDIATE_COMMANDLISTS=1
          
          # upgrade for default transformers version
          python -m pip install transformers==4.43.1
          python -m pip install "trl<0.12.0"
          
          # batch_size 1
          cp python/llm/test/benchmark/arc-perf-transformers-443.yaml python/llm/dev/benchmark/all-in-one/config.yaml
          cd python/llm/dev/benchmark/all-in-one
          # change csv name
          sed -i 's/test3_batch1/test4_batch1/g' run.py
          python run.py
          mv *.csv test_batch1
          
          # batch_size 2
          cd ../../../../../ 
          cp python/llm/test/benchmark/arc-perf-transformers-443-batch2.yaml python/llm/dev/benchmark/all-in-one/config.yaml
          cd python/llm/dev/benchmark/all-in-one
          # change csv name 
          sed -i 's/batch1/batch2/g' run.py
          python run.py
          mv *.csv test_batch2
          
          # batch_size 4
          cd ../../../../../ 
          cp python/llm/test/benchmark/arc-perf-transformers-443-batch4.yaml python/llm/dev/benchmark/all-in-one/config.yaml
          cd python/llm/dev/benchmark/all-in-one
          # change csv name 
          sed -i 's/batch2/batch4/g' run.py
          python run.py
          mv *.csv test_batch4
          python -m pip uninstall -y trl

          conda deactivate
      
      - name: Test on xpu(transformers==4.45.0)
        shell: bash
        run: |
          source activate perf-test-env
          
          export USE_XETLA=OFF
          export SYCL_CACHE_PERSISTENT=1
          export SYCL_PI_LEVEL_ZERO_USE_IMMEDIATE_COMMANDLISTS=1
          
          # upgrade for default transformers version
          python -m pip install transformers==4.45.0
          python -m pip install "trl<0.12.0"
          python -m pip install accelerate==0.33.0
          
          # batch_size 1
          cp python/llm/test/benchmark/arc-perf-transformers-445.yaml python/llm/dev/benchmark/all-in-one/config.yaml
          cd python/llm/dev/benchmark/all-in-one
          # change csv name
          sed -i 's/test4_batch4/test5_batch1/g' run.py
          python run.py
          mv *.csv test_batch1
          
          # batch_size 2
          cd ../../../../../ 
          cp python/llm/test/benchmark/arc-perf-transformers-445-batch2.yaml python/llm/dev/benchmark/all-in-one/config.yaml
          cd python/llm/dev/benchmark/all-in-one
          # change csv name 
          sed -i 's/batch1/batch2/g' run.py
          python run.py
          mv *.csv test_batch2
          
          # batch_size 4
          cd ../../../../../ 
          cp python/llm/test/benchmark/arc-perf-transformers-445-batch4.yaml python/llm/dev/benchmark/all-in-one/config.yaml
          cd python/llm/dev/benchmark/all-in-one
          # change csv name 
          sed -i 's/batch2/batch4/g' run.py
          python run.py
          mv *.csv test_batch4
          
          python -m pip install accelerate==0.23.0
          python -m pip uninstall -y trl

          conda deactivate

      - name: Concat csv and generate html
        shell: bash
        run: |
          # batch_size 1 
          cd python/llm/dev/benchmark/all-in-one/test_batch1
          python ../../../../test/benchmark/concat_csv.py
          for file in *.csv; do
              if [[ $file != *test* ]]; then
                  cp "$file" $CSV_SAVE_PATH/batch_size_1
              fi
          done
          python -m pip install pandas==1.5.3
          cd ../../../../test/benchmark
          python csv_to_html.py -f $CSV_SAVE_PATH/batch_size_1
          
          # batch_size 2
          cd ../../../../
          cd python/llm/dev/benchmark/all-in-one/test_batch2
          python ../../../../test/benchmark/concat_csv.py
          for file in *.csv; do
              if [[ $file != *test* ]]; then
                  cp "$file" $CSV_SAVE_PATH/batch_size_2
              fi
          done
          cd ../../../../test/benchmark
          python csv_to_html.py -f $CSV_SAVE_PATH/batch_size_2
          
          # batch_size 4
          cd ../../../../
          cd python/llm/dev/benchmark/all-in-one/test_batch4
          python ../../../../test/benchmark/concat_csv.py
          for file in *.csv; do
              if [[ $file != *test* ]]; then
                  cp "$file" $CSV_SAVE_PATH/batch_size_4
              fi
          done
          cd ../../../../test/benchmark
          python csv_to_html.py -f $CSV_SAVE_PATH/batch_size_4
      
      - name: Merge and sort csv files of multiple batches and generate html 
        shell: bash
        run: |
          cd python/llm/test/benchmark
          mkdir merged_temp
          # go through all the files and go to merged_temp
          cd ../../dev/benchmark/all-in-one/test_batch1
          for file in *.csv; do
              if [[ $file != *test* ]]; then
                  cp "$file" ../../../../test/benchmark/merged_temp
              fi
          done
          cd ../test_batch2
          for file in *.csv; do
              if [[ $file != *test* ]]; then
                  cp "$file" ../../../../test/benchmark/merged_temp
              fi
          done
          cd ../test_batch4
          for file in *.csv; do
              if [[ $file != *test* ]]; then
                  cp "$file" ../../../../test/benchmark/merged_temp
              fi
          done
          cd ../../../../test/benchmark
          python merge_csv_batch.py -f ./merged_temp
          cd merged_temp
          find . -name "*batch*.csv" -delete
          for file in *.csv; do
              cp "$file" $CSV_SAVE_PATH/merged
          done
          cd ..
          python csv_to_html.py -f $CSV_SAVE_PATH/merged
          rm -r merged_temp
      
      - name: Update html in parent folder
        shell: bash
        run: |
          cd python/llm/test/benchmark
          python update_html_in_parent_folder.py -f $CSV_SAVE_PATH

      - name: Check and upload results to ftp
        shell: bash
        run: |
          # batch_size 1
          cd python/llm/dev/benchmark/all-in-one/test_batch1
          python ../../../../test/benchmark/check_results.py -c test1 -y ../../../../test/benchmark/arc-perf-transformers-436.yaml
          python ../../../../test/benchmark/check_results.py -c test2 -y ../../../../test/benchmark/arc-perf-transformers-437.yaml
          python ../../../../test/benchmark/check_results.py -c test3 -y ../../../../test/benchmark/arc-perf-transformers-440.yaml
          find . -name "*test*.csv" -delete
          if [[ ${{ github.event_name }} == "schedule" ]]; then
            curl -T ./*.csv ${LLM_FTP_URL}/llm/nightly_perf/gpu/
          elif [[ ${{ github.event_name }} == "workflow_dispatch" ]] && [[ ${{ inputs.checkout-ref }} == "main" ]]; then
            curl -T ./*.csv ${LLM_FTP_URL}/llm/nightly_perf/gpu/
          fi
          cd ../
          rm -r test_batch1
          
          # batch_size 2
          cd test_batch2
          python ../../../../test/benchmark/check_results.py -c test1 -y ../../../../test/benchmark/arc-perf-transformers-436-batch2.yaml
          python ../../../../test/benchmark/check_results.py -c test2 -y ../../../../test/benchmark/arc-perf-transformers-437-batch2.yaml
          find . -name "*test*.csv" -delete
          if [[ ${{ github.event_name }} == "schedule" ]]; then
            curl -T ./*.csv ${LLM_FTP_URL}/llm/nightly_perf/gpu/
          elif [[ ${{ github.event_name }} == "workflow_dispatch" ]] && [[ ${{ inputs.checkout-ref }} == "main" ]]; then
            curl -T ./*.csv ${LLM_FTP_URL}/llm/nightly_perf/gpu/
          fi
          cd ../
          rm -r test_batch2
          
          # batch_size 4
          cd test_batch4
          python ../../../../test/benchmark/check_results.py -c test1 -y ../../../../test/benchmark/arc-perf-transformers-436-batch4.yaml
          python ../../../../test/benchmark/check_results.py -c test2 -y ../../../../test/benchmark/arc-perf-transformers-437-batch4.yaml
          find . -name "*test*.csv" -delete
          if [[ ${{ github.event_name }} == "schedule" ]]; then
            curl -T ./*.csv ${LLM_FTP_URL}/llm/nightly_perf/gpu/
          elif [[ ${{ github.event_name }} == "workflow_dispatch" ]] && [[ ${{ inputs.checkout-ref }} == "main" ]]; then
            curl -T ./*.csv ${LLM_FTP_URL}/llm/nightly_perf/gpu/
          fi
          cd ../
          rm -r test_batch4
